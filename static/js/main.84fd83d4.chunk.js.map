{"version":3,"sources":["components/TodoItem.module.css","components/Navbar.js","components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodoList.js","pages/About.js","pages/NoMatch.js","components/TodoContainer.js","index.js"],"names":["module","exports","Navbar","useState","navbarOpen","setNavbarOpen","handleToggle","prev","className","type","onClick","style","color","width","height","id","path","text","map","link","to","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","props","title","inputField","setInputField","onSubmit","e","preventDefault","trim","addTodoItem","alert","placeholder","value","onChange","target","TodoItem","todo","completed","editing","setEditing","viewMode","editMode","display","styles","item","onDoubleClick","checked","updateCheckbox","checkbox","fontStyle","opacity","textDecoration","deleteItem","textInput","updateTitle","onKeyDown","event","key","TodoList","items","todos","About","NotMatch","TodoContainer","setTodos","useEffect","loadedTodos","JSON","parse","localStorage","getItem","setItem","stringify","index","element","newTodo","length","prevState","updatedTitle","filter","NoMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84fd83d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__xJlaf\",\"checkbox\":\"TodoItem_checkbox__UFBzI\",\"textInput\":\"TodoItem_textInput__bkOGp\"};","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MdClose } from 'react-icons/md';\nimport { FiMenu } from 'react-icons/fi';\n\nconst Navbar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/about',\n      text: 'About',\n    },\n  ];\n\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const handleToggle = () => {\n    setNavbarOpen((prev) => !prev);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button type=\"button\" onClick={handleToggle}>\n        { navbarOpen ? (\n          <MdClose style={{ color: '#fff', width: '40px', height: '40px' }} />\n        ) : (\n          <FiMenu style={{ color: '#7b7b7b', width: '40px', height: '40px' }} />\n        ) }\n      </button>\n      <ul className={`menuNav ${navbarOpen ? ' showMenu' : ''}`}>\n        {links.map((link) => (\n          <li key={link.id}>\n            <NavLink to={link.path} onClick={handleToggle}>\n              {link.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Header() {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n\n  return (\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: '6rem',\n          fontWeight: '600',\n          marginBottom: '2rem',\n          lineHeight: '1em',\n          color: '#ececec',\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n      >\n        {' '}\n        todos\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdAddCircleOutline } from 'react-icons/md';\n\nfunction InputTodo(props) {\n  const [inputField, setInputField] = useState({\n    title: '',\n  });\n\n  const onChange = (e) => {\n    setInputField({\n      title: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputField.title.trim()) {\n      props.addTodoItem(inputField.title);\n      setInputField({\n        title: '',\n      });\n    } else {\n      alert('ToDo Title cannot be empty');\n    }\n  };\n\n  return (\n    <form\n      className=\"form-container\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Add to do....\"\n        value={inputField.title}\n        onChange={onChange}\n        className=\"input-text\"\n      />\n      <button type=\"button\" className=\"input-submit\">\n        <MdAddCircleOutline style={{\n          color: '#0f8a0f',\n          fontSize: '1.25rem',\n          fontWeight: '600',\n        }}\n        />\n      </button>\n    </form>\n  );\n}\n\nInputTodo.propTypes = {\n  addTodoItem: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport styles from './TodoItem.module.css';\n\nfunction TodoItem(props) {\n  const { todo } = props;\n  const { id, title, completed } = todo;\n\n  function handleCheckbox() {\n    props.updateCheckbox(id);\n  }\n\n  function handleDeleteItem() {\n    props.deleteItem(id);\n  }\n\n  const [editing, setEditing] = useState(false);\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log(\"Cleaning up...\")\n  //   }\n  // }, [])\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const handleUpdateTitle = (e) => {\n    props.updateTitle(e.target.value, id);\n  };\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={handleCheckbox}\n          className={styles.checkbox}\n        />\n        <span style={completed ? completedStyle : null}>\n          {title}\n        </span>\n        <button type=\"button\" onClick={handleDeleteItem}>\n          <MdDeleteForever style={{\n            color: '#eb4747',\n            fontSize: '1.25rem',\n            fontWeight: '600',\n          }}\n          />\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={handleUpdateTitle}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  updateTitle: PropTypes.func.isRequired,\n  updateCheckbox: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  todo: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  const { todos } = props;\n  const items = todos.map((todo) => (\n    <TodoItem\n      key={todo.id}\n      todo={todo}\n      updateCheckbox={props.updateCheckbox}\n      updateTitle={props.updateTitle}\n      deleteItem={props.deleteItem}\n    />\n  ));\n\n  return (\n    <div>\n      {items}\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.objectOf(Array).isRequired,\n  updateCheckbox: PropTypes.func.isRequired,\n  updateTitle: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\n\nconst About = () => <div className=\"about__content\">hello from about page</div>;\nexport default About;\n","import React from 'react';\n\nconst NotMatch = () => (\n  <div>\n    <h3>No match for this page</h3>\n  </div>\n);\nexport default NotMatch;\n","import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodoList from './TodoList';\nimport '../App.css';\nimport About from '../pages/About';\nimport NoMatch from '../pages/NoMatch';\n\nfunction TodoContainer() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // getting stored items\n    const loadedTodos = JSON.parse(localStorage.getItem('todos'));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n  // storing todos items\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const updateCheckbox = (id) => {\n    setTodos((prevState) => prevState.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo, completed: !todo.completed,\n        };\n      }\n      return todo;\n    }));\n  };\n\n  const updateTitle = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.title = updatedTitle;\n        }\n        return todo;\n      }),\n    );\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: [...todos].length + 1,\n      title,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const deleteTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => todo.id !== id),\n    ]);\n  };\n\n  // ***** Fetch\n  // ---Class Based---\n  // componentDidMount() {\n  //   fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n  //     .then(response => response.json())\n  //     .then(data => console.log(data));\n  // }\n\n  // ---Function Based---\n  // useEffect(() => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n  //     .then(response => response.json())\n  //     .then(data => setTodos(data));\n  // }, []);\n\n  return (\n    <>\n      <Navbar />\n      <Routes>\n        <Route\n          index\n          element={(\n            <div className=\"container\">\n              <div className=\"inner\">\n                <Header />\n                <InputTodo addTodoItem={addTodoItem} />\n                <TodoList\n                  todos={todos}\n                  updateCheckbox={updateCheckbox}\n                  updateTitle={updateTitle}\n                  deleteItem={deleteTodo}\n                />\n              </div>\n            </div>\n        )}\n        />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"*\" element={<NoMatch />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TodoContainer from './components/TodoContainer';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}